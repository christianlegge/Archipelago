from typing import Dict, Set, Tuple, NamedTuple

class ItemData(NamedTuple):
	item_type: str
	code: int
	progression: bool = False
	useful: bool = False
	trap: bool = False
	count: int = 1

item_table: Dict[str, ItemData] = {
	'Leather Whip': 					ItemData('MainWeapon', 1, progression=True, count=0), #Cannot be sent, only as a starting item
	'Chain Whip': 						ItemData('MainWeapon', 1, progression=True),
	'Flail Whip': 						ItemData('MainWeapon', 1, progression=True),
	'Knife': 							ItemData('MainWeapon', 1, progression=True),
	'Key Sword': 						ItemData('MainWeapon', 1, progression=True),
	'Axe': 								ItemData('MainWeapon', 1, progression=True),
	'Katana': 							ItemData('MainWeapon', 1, progression=True),
	'Shuriken': 						ItemData('Subweapon', 1, progression=True),
	'Rolling Shuriken': 				ItemData('Subweapon', 1, progression=True),
	'Earth Spear': 						ItemData('Subweapon', 1, progression=True),
	'Flare Gun': 						ItemData('Subweapon', 1, progression=True),
	'Bomb': 							ItemData('Subweapon', 1, progression=True),
	'Chakram': 							ItemData('Subweapon', 1, progression=True),
	'Caltrops': 						ItemData('Subweapon', 1, progression=True),
	'Pistol': 							ItemData('Subweapon', 1, progression=True),
	'Buckler': 							ItemData('Subweapon', 1, useful=True),
	'Silver Shield': 					ItemData('Subweapon', 1, progression=True),
	'Angel Shield': 					ItemData('Subweapon', 1, progression=True),
	'Ankh Jewel': 						ItemData('Subweapon', 1, progression=True, count=8), #Change count to 9 if alt mother ankh
	'Hand Scanner':						ItemData('Usable', 1, progression=True),
	'Djed Pillar':						ItemData('Usable', 1, progression=True),
	'Mini Doll':						ItemData('Usable', 1, progression=True),
	'Magatama Jewel':					ItemData('Usable', 1, progression=True),
	'Cog of the Soul':					ItemData('Usable', 1, progression=True),
	'Lamp of Time':						ItemData('Usable', 1, progression=True),
	'Pochette Key':						ItemData('Usable', 1, progression=True),
	'Dragon Bone':						ItemData('Usable', 1, progression=True),
	'Crystal Skull':					ItemData('Usable', 1, progression=True),
	'Vessel':							ItemData('Usable', 1, progression=True),
	'Pepper':							ItemData('Usable', 1, progression=True),
	'Woman Statue':						ItemData('Usable', 1, progression=True),
	'Key of Eternity':					ItemData('Usable', 1, progression=True),
	'Serpent Staff':					ItemData('Usable', 1, progression=True),
	'Talisman':							ItemData('Usable', 1, progression=True),
	'Waterproof Case':					ItemData('Inventory', 1, useful=True),
	'Heatproof Case':					ItemData('Inventory', 1, useful=True),
	'Shell Horn':						ItemData('Inventory', 1, useful=True),
	'Glove':							ItemData('Inventory', 1, useful=True),
	'Holy Grail':						ItemData('Inventory', 1, progression=True),
	'Isis\' Pendant':					ItemData('Inventory', 1, progression=True),
	'Crucifix':							ItemData('Inventory', 1, useful=True),
	'Helmet':							ItemData('Inventory', 1, progression=True),
	'Grapple Claw':						ItemData('Inventory', 1, progression=True),
	'Bronze Mirror':					ItemData('Inventory', 1, progression=True),
	'Eye of Truth':						ItemData('Inventory', 1, progression=True),
	'Ring':								ItemData('Inventory', 1, progression=True),
	'Scalesphere':						ItemData('Inventory', 1, progression=True),
	'Gauntlet':							ItemData('Inventory', 1, progression=True),
	'Anchor':							ItemData('Inventory', 1, progression=True),
	'Plane Model':						ItemData('Inventory', 1, progression=True),
	'Philosopher\'s Ocarina': 			ItemData('Inventory', 1, progression=True),
	'Feather':							ItemData('Inventory', 1, progression=True),
	'Book of the Dead':					ItemData('Inventory', 1, progression=True),
	'Fairy Clothes':					ItemData('Inventory', 1, progression=True),
	'Scriptures':						ItemData('Inventory', 1, useful=True),
	'Hermes\' Boots':					ItemData('Inventory', 1, progression=True),
	'Fruit of Eden':					ItemData('Inventory', 1, progression=True),
	'Twin Statue':						ItemData('Inventory', 1, progression=True),
	'Bracelet':							ItemData('Inventory', 1, useful=True),
	'Perfume':							ItemData('Inventory', 1, useful=True),
	'Spaulder':							ItemData('Inventory', 1),
	'Dimensional Key':					ItemData('Inventory', 1, progression=True),
	'Ice Cape':							ItemData('Inventory', 1, progression=True),
	'Origin Seal':						ItemData('Inventory', 1, progression=True),
	'Birth Seal':						ItemData('Inventory', 1, progression=True),
	'Life Seal':						ItemData('Inventory', 1, progression=True),
	'Death Seal':						ItemData('Inventory', 1, progression=True),
	'Sacred Orb':						ItemData('Inventory', 1, progression=True, count=10),
	'Map (Gate of Guidance)': 			ItemData('Map', 1),
	'Map (Mausoleum of the Giants)':	ItemData('Map', 1),
	'Map (Temple of the Sun)':			ItemData('Map', 1),
	'Map (Spring in the Sky)':			ItemData('Map', 1),
	'Map (Inferno Cavern)':				ItemData('Map', 1),
	'Map (Chamber of Extinction)':		ItemData('Map', 1),
	'Map (Twin Labyrinths)':			ItemData('Map', 1),
	'Map (Endless Corridor)':			ItemData('Map', 1),
	'Map (Shrine of the Mother)':		ItemData('Map', 1, progression=True),
	'Map (Gate of Illusion)':			ItemData('Map', 1),
	'Map (Graveyard of the Giants)':	ItemData('Map', 1),
	'Map (Temple of Moonlight)':		ItemData('Map', 1),
	'Map (Tower of the Goddess)':		ItemData('Map', 1),
	'Map (Tower of Ruin)':				ItemData('Map', 1),
	'Map (Chamber of Birth)':			ItemData('Map', 1),
	'Map (Dimensional Corridor)':		ItemData('Map', 1),
	'Treasures': 						ItemData('Inventory', 1, progression=True),
	'Diary':							ItemData('Usable', 1, progression=True),
	'Mulana Talisman':					ItemData('Usable', 1, progression=True),
	'Provocative Bathing Suit':			ItemData('Inventory', 1, count=0) #Add count if in pool
	'Fake Silver Shield':				ItemData('Subweapon', 1),
	'Mobile Super X2':					ItemData('Inventory', 1, useful=True),
	'Maternity Statue':					ItemData('Inventory', 1, progression=True, count=0), #Could be used instead of Woman Statue?
	'reader.exe':						ItemData('Software', 1, progression=True),
	'xmailer.exe':						ItemData('Software', 1),
	'yagomap.exe':						ItemData('Software', 1, progression=True),
	'yagostr.exe':						ItemData('Software', 1, progression=True),
	'bunemon.exe':						ItemData('Software', 1, useful=True),
	'bunplus.exe':						ItemData('Software', 1),
	'torude.exe':						ItemData('Software', 1, progression=True),
	'guild.exe':						ItemData('Software', 1), #progression if Hell Temple on
	'mantra.exe':						ItemData('Software', 1, progression=True),
	'emusic.exe':						ItemData('Software', 1),
	'beolamu.exe':						ItemData('Software', 1),
	'deathv.exe':						ItemData('Software', 1, useful=True),
	'randc.exe':						ItemData('Software', 1, useful=True),
	'capstar.exe':						ItemData('Software', 1, useful=True),
	'move.exe':							ItemData('Software', 1, useful=True),
	'mekuri.exe':						ItemData('Software', 1, progression=True), #progression if key fairy combo
	'miracle.exe':						ItemData('Software', 1, progression=True), #progression if key fairy combo or NPC rando
	'mirai.exe':						ItemData('Software', 1, progression=True),
	'lamulana.exe':						ItemData('Software', 1, useful=True),
	'Bat Trap':							ItemData('Trap', 1, trap=True, count=0),
	'Explosive Trap':					ItemData('Trap', 1, trap=True, count=0),
	'200 coins':						ItemData('Resource', 1, count=0), #Escape chest is 200 right?
	'100 coins':						ItemData('Resource', 1, count=0), #Adjust counts if money chests shuffled, have various distributions depending on total item pool minus starting item count
	'50 coins':							ItemData('Resource', 1, count=0),
	'30 coins':							ItemData('Resource', 1, count=0),
	'10 coins':							ItemData('Resource', 1, count=0),
	'1 Weight':							ItemData('Resource', 1, count=0),
	'Shuriken Ammo':					ItemData('ShopInventory', 1, count=0),
	'Rolling Shuriken Ammo':			ItemData('ShopInventory', 1, count=0),
	'Earth Spear Ammo':					ItemData('ShopInventory', 1, count=0),
	'Flare Gun Ammo':					ItemData('ShopInventory', 1, count=0),
	'Bomb Ammo':						ItemData('ShopInventory', 1, count=0),
	'Chakram Ammo':						ItemData('ShopInventory', 1, count=0),
	'Caltrops Ammo':					ItemData('ShopInventory', 1, count=0),
	'Pistol Ammo':						ItemData('ShopInventory', 1, count=0),
	'5 Weights':						ItemData('ShopInventory', 1, count=0)
}